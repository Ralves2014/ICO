function [Lista, LNit, Lopt] = newton_raphson(f, Nvar, Nmax, errodf, NPontosIniciais, x_values, y_values, pontos_iniciais)
    clc;

    syms a b 'real'

    if Nvar==1
        v=a;          
    elseif Nvar==2
        v=[a; b];        
    end
        
    if Nvar == 1
        S = f(v);
    elseif Nvar == 2
        S = f(v(1), v(2));
    end

    dS = jacobian(S, v); 
    d2S = jacobian(dS(:), v);
        
    df = @(x) double(subs(dS, v, x)');
    
    d2f = @(x) double(subs(d2S, v, x)');


                           
    Lista = [];
    LNit = [];
    Lopt = [];


    for i = 1:NPontosIniciais
        x = pontos_iniciais(:, i);
        Lista = [Lista, x];   
        dfx = df(x);   
        N = 1;     

        while norm(dfx) > errodf && N < Nmax  
            d = -inv(d2f(x)) * dfx;
            beta0 = 1; % No método de Newton-Raphson, pode ser simplesmente 1
            
            lambda = Wolfe(x, f, df, d, beta0); % Calculando o passo lambda
            
            x = x + lambda * d;  
            Lista = [Lista, x];       
            dfx = df(x);
            N = N + 1;           
        end 

        Lopt = [Lopt x];
        LNit = [LNit N];
    end 

    % PARTE 7: OBTENÇÃO DO MÍNIMO GLOBAL

    xopt=Lopt(:,1); 
    
    for i=2:NPontosIniciais
        if f(xopt)>f(Lopt(:,i)); 
            xopt=Lopt(:,i);      
        end
    end

    % PARTE 8: DEFINIÇÃO E EXIBIÇÃO DOS OUTPUTS (SÃO EXIBIDOS NA COMMAND
    % WINDOW PORQUE NÃO É COLOCADO ";" NO FINAL, EMBORA SEM LEGENDA)(PARA
    % OBTER LEGENDA COLOCAR PARTE 9 DO FICHEIRO "descidaMaximaV1aula.m")
    
    xoptimo=xopt        
    foptimo=f(xopt)    
    dffinal=df(xopt)    
    Nmean=mean(LNit)


    % PARTE 9: EXIBIÇÃO DOS GRÁFICOS COM RECURSO A OUTROS m.FILES

     close all
     
     if Nvar==2 
     % nivelGraficos(f,a(1),b(1),a(2),b(2))
     nivelGraficos(f, min(pontos_iniciais(1,:)), max(pontos_iniciais(1,:)), min(pontos_iniciais(2,:)), max(pontos_iniciais(2,:)))

     
        hold on
     
        graficosLineSearch(Lista,LNit,Lopt)  
     
        hold off
    
    elseif Nvar==1
    
        graficosLineSearchNvar1(f,Lista,LNit,Lopt)
    
        hold on
    
        fplot(f,[a(1),b(1)])
    
        hold off

     end


end
